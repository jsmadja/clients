<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:element name="MavenModuleSetBuild" type="hudson.maven.MavenModuleSetBuild"/>
  <xsd:complexType name="hudson.maven.MavenModuleSetBuild">
    <xsd:complexContent>
      <xsd:extension base="hudson.maven.AbstractMavenBuild">
        <xsd:sequence/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>

  <xsd:complexType name="hudson.maven.AbstractMavenBuild">
    <xsd:complexContent>
      <xsd:extension base="hudson.model.AbstractBuild">
        <xsd:sequence/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="hudson.model.AbstractBuild">
    <xsd:complexContent>

      <xsd:extension base="hudson.model.Run">
        <xsd:sequence>
          <xsd:element name="builtOn" type="xsd:string" minOccurs="0">
            <xsd:annotation>
              <xsd:documentation> Returns the name of the slave it was built on; null or "" if built by the master.
 (null happens when we read old record that didn't have this information.)
</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="changeSet" type="hudson.scm.ChangeLogSet" minOccurs="0">

            <xsd:annotation>
              <xsd:documentation> Gets the changes incorporated into this build.

 @return never null.
</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="culprit" type="hudson.model.User" minOccurs="0" maxOccurs="unbounded">
            <xsd:annotation>
              <xsd:documentation> List of users who committed a change since the last non-broken build till now.

 &lt;p&gt;

 This list at least always include people who made changes in this build, but
 if the previous build was a failure it also includes the culprit list from there.

 @return
      can be empty but never null.
</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="hudson.model.User">

    <xsd:sequence>
      <xsd:element name="absoluteUrl" type="xsd:string" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation> The URL of the user page.
</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="description" type="xsd:string" minOccurs="0"/>
      <xsd:element name="fullName" type="xsd:string" minOccurs="0">

        <xsd:annotation>
          <xsd:documentation> Gets the human readable name of this user.
 This is configurable by the user.

 @return
      never null.
</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="id" type="xsd:string" minOccurs="0"/>
      <xsd:element name="property" type="hudson.model.UserProperty" minOccurs="0" maxOccurs="unbounded">
        <xsd:annotation>
          <xsd:documentation> List of all {@link UserProperty}s exposed primarily for the remoting API.

</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="hudson.model.UserProperty">
    <xsd:sequence/>
  </xsd:complexType>
  <xsd:complexType name="hudson.scm.ChangeLogSet">

    <xsd:sequence>
      <xsd:element name="item" type="xsd:anyType" minOccurs="0" maxOccurs="unbounded">
        <xsd:annotation>
          <xsd:documentation> All changes in this change set. 
</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="kind" type="xsd:string" minOccurs="0">
        <xsd:annotation>

          <xsd:documentation> Optional identification of the kind of SCM being used.
 @return a short token, such as the SCM's main CLI executable name
 @since 1.284
</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="hudson.model.Run">
    <xsd:complexContent>
      <xsd:extension base="hudson.model.Actionable">

        <xsd:sequence>
          <xsd:element name="artifact" type="hudson.model.Run-Artifact" minOccurs="0" maxOccurs="unbounded">
            <xsd:annotation>
              <xsd:documentation> Gets the artifacts (relative to {@link #getArtifactsDir()}.
</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="building" type="xsd:boolean">
            <xsd:annotation>

              <xsd:documentation> Returns true if the build is not completed yet.
 This includes "not started yet" state.
</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="description" type="xsd:string" minOccurs="0"/>
          <xsd:element name="duration" type="xsd:long">
            <xsd:annotation>
              <xsd:documentation> Gets the millisecond it took to build.

</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="fullDisplayName" type="xsd:string" minOccurs="0"/>
          <xsd:element name="id" type="xsd:string" minOccurs="0">
            <xsd:annotation>
              <xsd:documentation> Unique ID of this build.
</xsd:documentation>
            </xsd:annotation>

          </xsd:element>
          <xsd:element name="keepLog" type="xsd:boolean">
            <xsd:annotation>
              <xsd:documentation> Returns true if this log file should be kept and not deleted.

 This is used as a signal to the {@link LogRotator}.
</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="number" type="xsd:int"/>
          <xsd:element name="result" type="xsd:anyType" minOccurs="0">

            <xsd:annotation>
              <xsd:documentation> Returns the build result.

 &lt;p&gt;
 When a build is {@link #isBuilding() in progress}, this method
 returns an intermediate result.
</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="timestamp" type="xsd:long" minOccurs="0">
            <xsd:annotation>

              <xsd:documentation> When the build is scheduled.
</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="url" type="xsd:string" minOccurs="0">
            <xsd:annotation>
              <xsd:documentation> Obtains the absolute URL to this build.

 @deprecated
      This method shall &lt;b&gt;NEVER&lt;/b&gt; be used during HTML page rendering, as it won't work with
      network set up like Apache reverse proxy.
      This method is only intended for the remote API clients who cannot resolve relative references
      (even this won't work for the same reason, which should be fixed.)

</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="hudson.model.Run-Artifact">
    <xsd:sequence>

      <xsd:element name="displayPath" type="xsd:string" minOccurs="0"/>
      <xsd:element name="fileName" type="xsd:string" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation> Returns just the file name portion, without the path.
</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="relativePath" type="xsd:string" minOccurs="0">
        <xsd:annotation>

          <xsd:documentation> Relative path name from {@link Run#getArtifactsDir()}
</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="hudson.model.Actionable">
    <xsd:sequence>
      <xsd:element name="action" type="xsd:anyType" minOccurs="0" maxOccurs="unbounded">

        <xsd:annotation>
          <xsd:documentation> Gets actions contributed to this build.

 &lt;p&gt;
 A new {@link Action} can be added by {@code getActions().add(...)}.

 @return
      may be empty but never null.
</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>

</xsd:schema>